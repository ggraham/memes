% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fimo.R
\name{runFimo}
\alias{runFimo}
\title{Run FIMO on input sequences}
\usage{
runFimo(
  sequences,
  motifs,
  bfile = "motif",
  outdir = "auto",
  parse_genomic_coord = TRUE,
  skip_matched_sequence = TRUE,
  max_strand = TRUE,
  text = TRUE,
  meme_path = NULL,
  silent = TRUE,
  ...
)
}
\arguments{
\item{sequences}{path to fasta file, or stringset input.}

\item{motifs}{path to .meme format file, or universalmotif/universalmotif list input.}

\item{bfile}{path to background file, or special values: "motif", or
"uniform" to use 0-order frequencies contained in the motif, or a uniform
letter distribution. (default: "motif")}

\item{outdir}{output directory location. Only used if text = FALSE. Default:
"auto" to autogenerate directory name. Note: if not using a fasta path as
input, this will be a temporary location unless explicity set.}

\item{parse_genomic_coord}{\code{logical(1)} whether to parse genomic position
from fasta name. Fasta names must be UCSC format positions (ie
"chr:start-end"). If names of fasta entries are genomic coordinates and
parse_genomic_coord == TRUE, results will contain positions of motif matches,
otherwise FIMO will count positions from 1 to length of fasta file.}

\item{skip_matched_sequence}{\code{logical(1)} whether or not to include the DNA
sequence of the match. Default: \code{FALSE}. Note: jobs will complete faster if
set to FALSE. \code{add_sequence()} can be used to lookup the sequence after data import if
\code{parse_genomic_coord} is \code{TRUE}, so setting this flag is not strictly needed.}

\item{max_strand}{if match is found on both strands, only report strand with
best match.}

\item{text}{\code{logical(1)} (default: \code{TRUE}). No output files will be created on the filesystem.
The results are unsorted and no q-values are computed. This setting allows
fast searches on very large inputs.}

\item{meme_path}{path to \verb{meme/bin/} (optional). Defaut: \code{NULL}, searches
"MEME_PATH" environment variable or "meme_path" option.}

\item{silent}{\code{logical(1)} whether to suppress stdout/stderr printing to
terminal (default: TRUE). NOTE: if \code{text = TRUE}, setting \code{silent = TRUE}
will print all FIMO matches to terminal if the run is successful. Can be
useful for troubleshooting.}

\item{...}{additional commandline arguments to fimo see:
\href{http://meme-suite.org/doc/fimo.html?man_type=web}{Fimo web manual} and the FIMO Flag table below}
}
\value{
GenomicRanges object contining positions of each match. Note: if
\code{parse_genomic_coords = FALSE}, each \code{seqnames} entry will be the fasta
header, and start/end will be the position within that sequence of the
match. It is a good idea to use \code{parse_genomic_coords = TRUE} if using
\code{get_sequence()} to create input sequences.
}
\description{
NOTE: runs best using \code{text = TRUE}, setting genomic coordinates in fasta
headers, and using \code{parse_genomic_coord = TRUE}.
}
\details{
Additional arguments passed to \code{...}\tabular{cccl}{
   FIMO Flag \tab allowed values \tab default \tab description \cr
   alpha \tab \code{numeric(1)} \tab 1 \tab alpha for calculating position-specific priors. Represents fraction of sites that are binding sites of TF of interest. Used in conjunction with \code{psp} \cr
   bfile \tab "motif", "motif-file", "uniform", file path, \tab "motif" \tab If "motif" or "motif-file", use 0-order letter frequencies from motif. "uniform" sets uniform letter frequencies. \cr
   max_stored_scores \tab \code{integer(1)} \tab NULL \tab maximum number of scores to be stored for computing q-values. used when \code{text = FALSE}, see FIMO webpage for details \cr
   motif_pseudo \tab \code{numeric(1)} \tab 0.1 \tab pseudocount added to motif matrix \cr
   no_qvalue \tab \code{logical(1)} \tab FALSE \tab only needed when \code{text = FALSE}, do not compute q-value for each p-value \cr
   norc \tab \code{logical(1)} \tab FALSE \tab Do not score reverse complement strand \cr
   prior_dist \tab file path \tab NULL \tab file containing binned distribution of priors \cr
   psp \tab file path \tab NULL \tab file containing position specific priors. Requires \code{prior_dist} \cr
   qv_thresh \tab \code{logical(1)} \tab FALSE \tab use q-values for the output threshold \cr
   thresh \tab \code{numeric(1)} \tab \code{1e-4} \tab output threshold for returning a match, only matches with values less than \code{thresh} are returned. \cr
}

\subsection{Licensing}{

The MEME Suite is free for non-profit use, but for-profit users should purchase a
license. See the \href{http://meme-suite.org/doc/copyright.html}{MEME Suite Copyright Page} for details.
}
}
\section{Citation}{
If you use \code{runFimo()} in your analysis, please cite:

Charles E. Grant, Timothy L. Bailey, and William Stafford Noble, "FIMO:
Scanning for occurrences of a given motif", Bioinformatics, 27(7):1017-1018,
2011. \href{http://bioinformatics.oxfordjournals.org/content/early/2011/02/16/bioinformatics.btr064.full}{full text}
}

\examples{
\dontrun{
seq <- universalmotif::create_sequences()
# sequences must have names in their fasta headers
names(seq) <- seq_along(seq)
motif <- universalmotif::create_motif()
runFimo(seq, motif, parse_genomic_coord = FALSE)
}
}
